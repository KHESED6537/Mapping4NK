plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.mercy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Web (REST API)
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// JPA & Hibernate & MySQL
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation("org.hibernate:hibernate-core")
	runtimeOnly 'com.mysql:mysql-connector-j'
	// JSON 데이터 변환
	implementation("com.fasterxml.jackson.core:jackson-databind")
	// Spring Security (선택 사항)
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// 비동기 API 요청 (Python API 호출)
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// Lombok
	implementation 'org.projectlombok:lombok'
	// Spring Boot Configuration Processor
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// OpenAPI (Swagger 문서 자동 생성)
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2")
	// 캐싱
	implementation("org.springframework.boot:spring-boot-starter-cache")
}

tasks.named('test') {
	useJUnitPlatform()
}
